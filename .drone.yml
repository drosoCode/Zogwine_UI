---
kind: pipeline
type: docker
name: test

steps:
  - name: code_analysis
    image: aosapps/drone-sonar-plugin
    settings:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token

trigger:
  event: 
    - push

---
kind: pipeline
type: docker
name: android_build

steps:
  - name: build
    image: registry.droso.io/ci/android:latest
    environment:
      endpoint:
        from_secret: endpoint
      cert:
        from_secret: cert
      key:
        from_secret: key
    commands:
      - cd /drone/src && npm i --also=dev --unsafe-perm=true --allow-root
      - "sed -i -r \"s|    baseURL:.*|    baseURL: '${endpoint}',|\" /drone/src/src/store/index.js"
      - cat /drone/src/src/store/index.js
      - cd /drone/src && quasar build -m cordova -T android
      - /usr/bin/key2store.py
      - jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore /tmp/store.p12 /drone/src/src-cordova/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk app -storepass changeit
      - /opt/android-sdk/build-tools/30.0.0/zipalign -v 4 /drone/src/src-cordova/platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk /drone/src/app.apk
      - mv /drone/src/app.apk /drone/release/zogwine.apk
    volumes:
      - name: release
        path: /drone/release

  - name: discord_notification
    image: appleboy/drone-discord
    when:
      status:
        - success
        - failure
    settings:
      webhook_id:
        from_secret: webhook_id
      webhook_token:
        from_secret: webhook_token
      message: >
        {{#success build.status}}
        ✅ Android build succeeded. 💾 Build #{{build.number}} for `{{repo.name}}`.
        {{else}}
        ❌ Android build failed. 💾 Build #{{build.number}} for `{{repo.name}}`.
        {{/success}}

trigger:
  event:
  - push

volumes:
  - name: release
    host:
      path: /cache/drone

image_pull_secrets:
- dockerconfigjson

---
kind: pipeline
type: docker
name: web_build

steps:
  - name: build
    image: node:14-buster-slim
    commands:
      - npm i -g @quasar/cli
      - cd /drone/src && npm i --save-dev --unsafe-perm=true --allow-root
      - cd /drone/src && quasar build -m spa
      - cp -R /drone/src/pwa/* /drone/src/dist/spa
      - tar -czf /drone/release/zogwine_web.tar.gz /drone/src/dist/spa
    volumes:
      - name: release
        path: /drone/release

  - name: discord_notification
    image: appleboy/drone-discord
    when:
      status:
        - success
        - failure
    settings:
      webhook_id:
        from_secret: webhook_id
      webhook_token:
        from_secret: webhook_token
      message: >
        {{#success build.status}}
        ✅ Web build succeeded. 💾 Build #{{build.number}} for `{{repo.name}}`.
        {{else}}
        ❌ Web build failed. 💾 Build #{{build.number}} for `{{repo.name}}`.
        {{/success}}

trigger:
  event:
  - push

volumes:
  - name: release
    host:
      path: /cache/drone

---
kind: secret
name: dockerconfigjson
get:
  path: kv/data/drone/registry/readonly
  name: dockerconfigjson

---
kind: secret
name: webhook_id
get:
  path: kv/data/discord/webhook/drone
  name: id

---
kind: secret
name: webhook_token
get:
  path: kv/data/discord/webhook/drone
  name: token

---
kind: secret
name: sonar_host
get:
  path: kv/data/sonarqube
  name: host

---
kind: secret
name: sonar_token
get:
  path: kv/data/sonarqube
  name: token

---
kind: secret
name: endpoint
get:
  path: kv/data/drone/zogwine_ui
  name: endpoint

---
kind: secret
name: cert
get:
  path: kv/data/drone/zogwine_ui
  name: cert

---
kind: secret
name: key
get:
  path: kv/data/drone/zogwine_ui
  name: key

---
kind: signature
hmac: 72e9fa90e8dffaa1815321965d0a9bb9398c250156503aabce84fd775247d2d5

...
